"""
Django settings for OrderSystem project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^hricsbl5r_fk7a=8lv1kal&boi$6&-sxy+mgbxrao5q+--dy='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'backend.apps.BackendConfig',
    'customer',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'backend.middleware.pers.PersMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'OrderSystem.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'OrderSystem.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'NAME': 'ordersystem',
        'USER': 'root',
        'PASSWORD': '123456',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTH_USER_MODEL = 'backend.BackendUser'          # 更改Auth User模型为自己创建的模型，自定制用户模型


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# 设置为东八区,如果为True的话则TIME_ZONE不生效
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

EXCEL_PATH = os.path.join(BASE_DIR, 'xlsx')

# 日志文件文件夹
LOGS_FOLDER = os.path.join(BASE_DIR, 'log/server')

# 日志
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(asctime)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOGS_FOLDER, 'server.log'),
            'maxBytes': 1024 * 1024 * 1,  # 1 MB
            'backupCount': 30,
            'formatter': 'simple'
        },
        'error': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOGS_FOLDER, 'server-error.log'),
            'maxBytes': 1024 * 1024 * 1,  # 1 MB
            'backupCount': 10,
            'formatter': 'simple'
        },
        'action': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOGS_FOLDER, 'action.log'),
            'maxBytes': 1024 * 1024 * 1,  # 1 MB
            'backupCount': 30,
            'formatter': 'simple'
        },
    },
    'loggers': {                # 定义了三个记录器
        'django': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'INFO',
        },
        'server': {
            'handlers': ['file', 'error'],
            'level': 'INFO',
        },
        'action': {
            'handlers': ['action'],
            'level': 'INFO',
        },
    }
}

# 创建文件夹
try:
    if not os.path.isdir(EXCEL_PATH):
        os.makedirs(EXCEL_PATH, exist_ok=True)
        print('\t- Created folder {}'.format(EXCEL_PATH))

    # Windows下报错，需要手动新建文件夹
    if LOGGING and 'handlers' in LOGGING:
        for k in LOGGING['handlers']:
            if 'filename' in LOGGING['handlers'][k]:
                log_file = LOGGING['handlers'][k]['filename']
                if not os.path.isfile(log_file):
                    os.mknod(log_file)
                    print('\t- Created log file: {}'.format(log_file))
    print('\n')

except Exception as e:
    print(e)

# 配置url权限白名单
SAFE_URL = [
    '^/$',
    '/login/',
    '/logout/',
    '/admin/.*',
    '/backend/index/',
    '/backend/admin/role/',
    '/backend/buyers/get/search/select/',
    '/backend/orders/get/search/select/',
    '/backend/buyers/import/',
    '/backend/buyers/export/',
    '/backend/orders/import/',
    '/backend/orders/export/',
]

REGEX_URL = r'^{url}'  # url作严格匹配

DEFAULT_PASSWORD = 'admin123'

LOGIN_URL = '/login/'

PERMISS_SESSION_KEY = 'isAllow'

IS_SUPERUSER = 'is_superuser'
